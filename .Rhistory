if(!is.null(m)) {
print("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
x<-makematrix(matrix(c(1,3,2,4),nrow=2,ncol=2))
x
cachematrix(x)
cachematrix(x)
cachematrix(x)
makematrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cachematrix <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
print("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
x<-makematrix(matrix(c(1,3,2,4),nrow=2,ncol=2))
x
cachematrix(x)
cachematrix(x)
cachematrix(x)
makematrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cachematrix <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
x<-makematrix(matrix(c(1,3,2,4),nrow=2,ncol=2))
x
cachematrix(x)
cachematrix(x)
cachematrix(x)
## Assignment: Caching the Inverse of a Matrix
## 1: Create Cache of a matrix; 2: Generate inverse
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Fetch inverse data from cache or recalculate inverse using matrix
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m))
{
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
##~~~~~~~~~~~~~Output~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~##
x<-makeCacheMatrix(matrix(c(1,3,2,4),nrow=2,ncol=2)) ##Creating Matrix and its cache
cacheSolve(x) ## retriving and storing inverse matrix to cache
cacheSolve(x)  ## retriving and displaying stored inverse matrix from cache
## Assignment: Caching the Inverse of a Matrix
## 1: Create Cache of a matrix; 2: Generate inverse
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Fetch inverse data from cache or recalculate inverse using matrix
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m))
{
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
##~~~~~~~~~~~~~Output~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~##
x<-makeCacheMatrix(matrix(c(1,3,2,4),nrow=2,ncol=2)) ##Creating Matrix and its cache
cacheSolve(x) ## retriving matrix from cache,calculating and storing inverse matrix to cache and displaying as output
cacheSolve(x)  ## retriving and displaying stored inverse matrix from cache
## Assignment: Caching the Inverse of a Matrix
## 1: Create Cache of a matrix; 2: Generate inverse
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Fetch inverse data from cache or recalculate inverse using matrix
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m))
{
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
##~~~~~~~~~~~~~Output~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~##
x<-makeCacheMatrix(matrix(c(1,3,2,4),nrow=2,ncol=2)) ##Creating Matrix and its cache
cacheSolve(x) ## retriving matrix from cache,calculating and storing inverse matrix to cache and displaying as output
cacheSolve(x)  ## retriving and displaying stored inverse matrix from cache
## Assignment: Caching the Inverse of a Matrix
## 1: Create Cache of a matrix; 2: Generate inverse
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Fetch inverse data from cache or recalculate inverse using matrix
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m))
{
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
##~~~~~~~~~~~~~Output~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~##
x<-makeCacheMatrix(matrix(c(1,3,2,4),nrow=2,ncol=2)) ##Creating Matrix cache
cacheSolve(x) ## retriving matrix from cache,calculating and storing inverse matrix to cache and displaying as output
cacheSolve(x)  ## retriving and displaying stored inverse matrix from cache
## Assignment: Caching the Inverse of a Matrix
## 1: Create Cache of a matrix; 2: Generate inverse
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Fetch inverse data from cache or recalculate inverse using matrix
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m))
{
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
##~~~~~~~~~~~~~Output~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~##
x<-makeCacheMatrix(matrix(c(1,3,2,4),nrow=2,ncol=2)) ##Creating Matrix cache
cacheSolve(x) ## retriving matrix from cache,calculating and storing inverse matrix to cache and displaying as output
cacheSolve(x)  ## retriving and displaying stored inverse matrix from cache rather recalculating inverse of matrix
## Assignment: Caching the Inverse of a Matrix
## 1: Create Cache of a matrix; 2: Generate inverse
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(inverse) m <<- inverse
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Fetch inverse data from cache or recalculate inverse using matrix
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getinverse()
if(!is.null(m))
{
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
##~~~~~~~~~~~~~Output~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~##
x<-makeCacheMatrix(matrix(c(1,3,2,4),nrow=2,ncol=2)) ##Creating Matrix cache
cacheSolve(x) ## retriving matrix from cache,calculating and storing inverse matrix to cache and displaying as output
cacheSolve(x)  ## retriving and displaying stored inverse matrix from cache rather recalculating inverse of matrix
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
setwd("~/GitHub/ExData_Plotting2")
##Download, unzip and assign dataframes
##URL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
##download.file(URL, destfile = "./data.zip",method="curl")
##unzip("./data.zip")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
##Sum emissions by year
result<-rowsum(NEI$Emissions, NEI$year)
##Properly structure and label dataframe
year<-c(1999,2002,2005,2008)
Q1<-cbind(year,result)
Q1<-data.frame(Q1)
names(Q1)<-c("Year","Emissions")
##Create plot
png("plot1.png",width=480,height=480)
##Plot points and add trendline to show decrease
plot(Q1$Year,Q1$Emissions,pch=20, main="Overall Emissions Over Time", xlab="Year", ylab="Emissions")
fit<-glm(Q1$Emissions~Q1$Year)
co<-coef(fit)
abline(fit,col="blue",lwd=2)
dev.off()
##Have total emissions from PM2.5 decreased in the Baltimore City, Maryland (fips == 24510) from 1999 to 2008? Use the base plotting system to make a plot answering this question.
##Upload a PNG file containing your plot addressing this question.
##Steps to Download, unzip and assign dataframes
##URL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
##download.file(URL, destfile = "./data.zip",method="curl")
##unzip("./data.zip")
##I have unzipped files in working directory.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
##Subset for Baltimore data
Balt<-NEI[which(NEI$fips=="24510"),]
##Sum emissions by year for Baltimore data
result<-rowsum(Balt$Emissions, Balt$year)
##Structure and relabel dataframe
year<-c(1999,2002,2005,2008)
Q2<-cbind(year,result)
Q2<-data.frame(Q2)
names(Q2)<-c("Year","Emissions")
##Create plot
png("plot2.png",width=480,height=480)
##Plot points and add trendline to show decrease
plot(Q2$Year,Q2$Emissions,pch=20, main="Baltimore Emissions Over Time", xlab="Year", ylab="Emissions")
fit<-glm(Q2$Emissions~Q2$Year)
co<-coef(fit)
abline(fit,col="blue",lwd=2)
dev.off()
NEI<- "a"
##Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999–2008 for Baltimore City? Which have seen increases in emissions from 1999–2008? Use the ggplot2 plotting system to make a plot answer this question.
##Upload a PNG file containing your plot addressing this question.
##Steps to Download, unzip and assign dataframes
##URL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
##download.file(URL, destfile = "./data.zip",method="curl")
##unzip("./data.zip")
##I have unzipped files in working directory.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
##Subset for Baltimore data
Balt<-NEI[which(NEI$fips=="24510"),]
##Sum emissions by type and year for Baltimore data
Q3<-aggregate(Balt$Emissions ~Balt$year+Balt$type,data=Balt,FUN="sum")
##Restructure and label data
names(Q3)<-c("Year","Type","Emissions")
Q3_t<-transform(Q3,Type == factor(Type))
##Create plot
png("plot3.png",width=480,height=480)
##Use ggplot2 to plot points and add trendline
qplot(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
dev.off()
install.packages("qplot")
install.packages("qplot").all
install.packages("qplot"[,1])
install.packages("qplot",[,1])
install.packages("qplot")[,1]
install.packages("qplot") require(installr)
install.packages("qplot") require("gplot")
install.packages("qplot"); require("gplot")
install.packages("ggplot2")
install.packages("C:/Users/vetrives.ABCOIND/Downloads/gplots_2.14.0.tar.gz", repos = NULL, type = "source")
##Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999–2008 for Baltimore City? Which have seen increases in emissions from 1999–2008? Use the ggplot2 plotting system to make a plot answer this question.
##Upload a PNG file containing your plot addressing this question.
##Steps to Download, unzip and assign dataframes
##URL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
##download.file(URL, destfile = "./data.zip",method="curl")
##unzip("./data.zip")
##I have unzipped files in working directory.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
##Subset for Baltimore data
Balt<-NEI[which(NEI$fips=="24510"),]
##Sum emissions by type and year for Baltimore data
Q3<-aggregate(Balt$Emissions ~Balt$year+Balt$type,data=Balt,FUN="sum")
##Restructure and label data
names(Q3)<-c("Year","Type","Emissions")
Q3_t<-transform(Q3,Type == factor(Type))
##Create plot
png("plot3.png",width=480,height=480)
##Use ggplot2 to plot points and add trendline
qplot(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
dev.off()
install.packages("qplot")
install.packages("qplot")
install.packages("qplot", dep = T)
install.packages("qplot", dependencies = TRUE)
install.packages(ggplot2,dependencies=TRUE)
install.packages("ggplot2"",dependencies=TRUE)
install.packages("ggplot2",dependencies=TRUE)
install.packages("ggplot2",dependencies=TRUE)
##Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999–2008 for Baltimore City? Which have seen increases in emissions from 1999–2008? Use the ggplot2 plotting system to make a plot answer this question.
##Upload a PNG file containing your plot addressing this question.
##Steps to Download, unzip and assign dataframes
##URL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
##download.file(URL, destfile = "./data.zip",method="curl")
##unzip("./data.zip")
##I have unzipped files in working directory.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
##Subset for Baltimore data
Balt<-NEI[which(NEI$fips=="24510"),]
##Sum emissions by type and year for Baltimore data
Q3<-aggregate(Balt$Emissions ~Balt$year+Balt$type,data=Balt,FUN="sum")
##Restructure and label data
names(Q3)<-c("Year","Type","Emissions")
Q3_t<-transform(Q3,Type == factor(Type))
##Create plot
png("plot3.png",width=480,height=480)
##Use ggplot2 to plot points and add trendline
ggplot2(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
dev.off()
install.packages("ggplot2")
ggplot2(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
##Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999–2008 for Baltimore City? Which have seen increases in emissions from 1999–2008? Use the ggplot2 plotting system to make a plot answer this question.
##Upload a PNG file containing your plot addressing this question.
##Steps to Download, unzip and assign dataframes
##URL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
##download.file(URL, destfile = "./data.zip",method="curl")
##unzip("./data.zip")
##I have unzipped files in working directory.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
install.packages("ggplot2",dep="T")
##Subset for Baltimore data
Balt<-NEI[which(NEI$fips=="24510"),]
##Sum emissions by type and year for Baltimore data
Q3<-aggregate(Balt$Emissions ~Balt$year+Balt$type,data=Balt,FUN="sum")
##Restructure and label data
names(Q3)<-c("Year","Type","Emissions")
Q3_t<-transform(Q3,Type == factor(Type))
##Create plot
png("plot3.png",width=480,height=480)
##Use ggplot2 to plot points and add trendline
ggplot2(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
dev.off()
##Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999–2008 for Baltimore City? Which have seen increases in emissions from 1999–2008? Use the ggplot2 plotting system to make a plot answer this question.
##Upload a PNG file containing your plot addressing this question.
##Steps to Download, unzip and assign dataframes
##URL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
##download.file(URL, destfile = "./data.zip",method="curl")
##unzip("./data.zip")
##I have unzipped files in working directory.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
##install.packages("ggplot2",dep="T")
##Subset for Baltimore data
Balt<-NEI[which(NEI$fips=="24510"),]
##Sum emissions by type and year for Baltimore data
Q3<-aggregate(Balt$Emissions ~Balt$year+Balt$type,data=Balt,FUN="sum")
##Restructure and label data
names(Q3)<-c("Year","Type","Emissions")
Q3_t<-transform(Q3,Type == factor(Type))
##Create plot
png("plot3.png",width=480,height=480)
##Use ggplot2 to plot points and add trendline
ggplot(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
dev.off()
include("ggplot")
library("ggplot")
install.packages("ggplot2", dep = T)
install.packages("ggplot2")
##Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999–2008 for Baltimore City? Which have seen increases in emissions from 1999–2008? Use the ggplot2 plotting system to make a plot answer this question.
##Upload a PNG file containing your plot addressing this question.
##Steps to Download, unzip and assign dataframes
##URL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
##download.file(URL, destfile = "./data.zip",method="curl")
##unzip("./data.zip")
##I have unzipped files in working directory.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
##install.packages("ggplot2",dep="T")
##Subset for Baltimore data
Balt<-NEI[which(NEI$fips=="24510"),]
##Sum emissions by type and year for Baltimore data
Q3<-aggregate(Balt$Emissions ~Balt$year+Balt$type,data=Balt,FUN="sum")
##Restructure and label data
names(Q3)<-c("Year","Type","Emissions")
Q3_t<-transform(Q3,Type == factor(Type))
##Create plot
png("plot3.png",width=480,height=480)
##Use ggplot2 to plot points and add trendline
ggplot(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
dev.off()
install.packages("C:/Users/vetrives.ABCOIND/Downloads/gplots_2.3.2.zip", repos = NULL)
install.packages("C:/Users/vetrives.ABCOIND/Downloads/ggplot_0.4.2.zip", repos = NULL)
install.packages("C:/Users/vetrives.ABCOIND/Downloads/ggplot2_0.5.5.zip", repos = NULL)
install.packages("XML")
install.packages("RBGL")
install.packages("graph")
install.packages("chron")
install.packages("acepack")
install.packages("proto")
install.packages("Hmisc")
##Of the four types of sources indicated by the type (point, nonpoint, onroad, nonroad) variable, which of these four sources have seen decreases in emissions from 1999–2008 for Baltimore City? Which have seen increases in emissions from 1999–2008? Use the ggplot2 plotting system to make a plot answer this question.
##Upload a PNG file containing your plot addressing this question.
##Steps to Download, unzip and assign dataframes
##URL<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
##download.file(URL, destfile = "./data.zip",method="curl")
##unzip("./data.zip")
##I have unzipped files in working directory.
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
##install.packages("ggplot2",dep="T")
##Subset for Baltimore data
Balt<-NEI[which(NEI$fips=="24510"),]
##Sum emissions by type and year for Baltimore data
Q3<-aggregate(Balt$Emissions ~Balt$year+Balt$type,data=Balt,FUN="sum")
##Restructure and label data
names(Q3)<-c("Year","Type","Emissions")
Q3_t<-transform(Q3,Type == factor(Type))
##Create plot
png("plot3.png",width=480,height=480)
##Use ggplot2 to plot points and add trendline
ggplot(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
dev.off()
gplot(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
qplot(Year,Emissions, data=Q3,geom=c("point","smooth"),method="lm",facets=.~Type)
